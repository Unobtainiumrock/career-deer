diff --git a/node_modules/react-burger-menu/LICENSE b/node_modules/react-burger-menu/LICENSE
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/README.md b/node_modules/react-burger-menu/README.md
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/dist/react-burger-menu.js b/node_modules/react-burger-menu/dist/react-burger-menu.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/BurgerMenu.js b/node_modules/react-burger-menu/lib/BurgerMenu.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/components/BurgerIcon.js b/node_modules/react-burger-menu/lib/components/BurgerIcon.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/components/CrossIcon.js b/node_modules/react-burger-menu/lib/components/CrossIcon.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/helpers/baseStyles.js b/node_modules/react-burger-menu/lib/helpers/baseStyles.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/helpers/dom.js b/node_modules/react-burger-menu/lib/helpers/dom.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/helpers/snapsvgImporter.js b/node_modules/react-burger-menu/lib/helpers/snapsvgImporter.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/helpers/utils.js b/node_modules/react-burger-menu/lib/helpers/utils.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menuFactory.js b/node_modules/react-burger-menu/lib/menuFactory.js
old mode 100644
new mode 100755
index c49ffbe..7940054
--- a/node_modules/react-burger-menu/lib/menuFactory.js
+++ b/node_modules/react-burger-menu/lib/menuFactory.js
@@ -14,9 +14,9 @@ var _react = require('react');
 
 var _react2 = _interopRequireDefault(_react);
 
-var _reactDom = require('react-dom');
+// var _reactDom = require('react-dom');
 
-var _reactDom2 = _interopRequireDefault(_reactDom);
+// var _reactDom2 = _interopRequireDefault(_reactDom);
 
 var _propTypes = require('prop-types');
 
@@ -56,7 +56,41 @@ exports['default'] = function (styles) {
     return ref.current;
   }
 
-  var Menu = function Menu(props) {
+  var Menu = function Menu({
+    bodyClassName = '',
+    burgerBarClassName = '',
+    burgerButtonClassName = '',
+    className = '',
+    crossButtonClassName = '',
+    crossClassName = '',
+    customBurgerIcon = false,
+    customCrossIcon = false,
+    customOnKeyDown,
+    disableAutoFocus = false,
+    disableCloseOnEsc = false,
+    disableOverlayClick,
+    htmlClassName = '',
+    id = '',
+    isOpen = false,
+    itemClassName = '',
+    itemListClassName = '',
+    itemListElement = 'nav',
+    menuClassName = '',
+    morphShapeClassName = '',
+    noOverlay = false,
+    noTransition = false,
+    onClose,
+    onIconHoverChange = () => {},
+    onOpen,
+    onStateChange = () => {},
+    outerContainerId = '',
+    overlayClassName = '',
+    pageWrapId = '',
+    right = false,
+    styles = {},
+    width = '300px',
+    children
+  }) {
     var _React$useState = _react2['default'].useState(false);
 
     var _React$useState2 = _slicedToArray(_React$useState, 2);
@@ -66,10 +100,10 @@ exports['default'] = function (styles) {
 
     var timeoutId = _react2['default'].useRef();
     var toggleOptions = _react2['default'].useRef({});
-    var prevIsOpenProp = usePrevious(props.isOpen);
+    var prevIsOpenProp = usePrevious(isOpen);
 
     _react2['default'].useEffect(function () {
-      if (props.isOpen) {
+      if (isOpen) {
         toggleMenu({ isOpen: true, noStateChange: true });
       }
 
@@ -80,7 +114,7 @@ exports['default'] = function (styles) {
     }, []);
 
     _react2['default'].useEffect(function () {
-      var wasToggled = typeof props.isOpen !== 'undefined' && props.isOpen !== isOpen && props.isOpen !== prevIsOpenProp;
+      var wasToggled = typeof isOpen !== 'undefined' && isOpen !== isOpen && isOpen !== prevIsOpenProp;
 
       if (wasToggled) {
         toggleMenu();
@@ -112,10 +146,10 @@ exports['default'] = function (styles) {
       var focusOnLastItem = _toggleOptions$current.focusOnLastItem;
 
       if (!noStateChange) {
-        props.onStateChange({ isOpen: isOpen });
+        onStateChange({ isOpen: isOpen });
       }
 
-      if (!props.disableAutoFocus) {
+      if (!disableAutoFocus) {
         // For accessibility reasons, ensures that when we toggle open,
         // we focus the first or last menu item according to given parameter
         if (isOpen) {
@@ -140,7 +174,7 @@ exports['default'] = function (styles) {
 
       // Bind keydown handlers (or custom function if supplied)
       var defaultOnKeyDown = isOpen ? onKeyDownOpen : onKeyDownClosed;
-      var onKeyDown = props.customOnKeyDown || defaultOnKeyDown;
+      var onKeyDown = customOnKeyDown || defaultOnKeyDown;
       window.addEventListener('keydown', onKeyDown);
 
       return function cleanup() {
@@ -164,25 +198,22 @@ exports['default'] = function (styles) {
     }
 
     function open() {
-      if (typeof props.onOpen === 'function') {
-        props.onOpen();
+      if (typeof onOpen === 'function') {
+        onOpen();
       } else {
         toggleMenu();
       }
     }
 
     function close() {
-      if (typeof props.onClose === 'function') {
-        props.onClose();
+      if (typeof onClose === 'function') {
+        onClose();
       } else {
         toggleMenu();
       }
     }
 
     function getStyle(style, index) {
-      var width = props.width;
-      var right = props.right;
-
       var formattedWidth = typeof width !== 'string' ? width + 'px' : width;
       return style(isOpen, formattedWidth, right, index);
     }
@@ -200,8 +231,8 @@ exports['default'] = function (styles) {
       }
 
       // Add custom styles
-      if (props.styles[propName]) {
-        output = _extends({}, output, props.styles[propName]);
+      if (styles[propName]) {
+        output = _extends({}, output, styles[propName]);
       }
 
       // Add element inline styles
@@ -211,7 +242,7 @@ exports['default'] = function (styles) {
 
       // Remove transition if required
       // (useful if rendering open initially)
-      if (props.noTransition) {
+      if (noTransition) {
         delete output.transition;
       }
 
@@ -246,10 +277,10 @@ exports['default'] = function (styles) {
       var applyOverflow = function applyOverflow(el) {
         return el.style['overflow-x'] = set ? 'hidden' : '';
       };
-      if (!props.htmlClassName) {
+      if (!htmlClassName) {
         applyOverflow(document.querySelector('html'));
       }
-      if (!props.bodyClassName) {
+      if (!bodyClassName) {
         applyOverflow(document.querySelector('body'));
       }
     }
@@ -262,19 +293,19 @@ exports['default'] = function (styles) {
         return el.classList[set ? 'add' : 'remove'](className);
       };
 
-      if (props.htmlClassName) {
-        applyClass(document.querySelector('html'), props.htmlClassName);
+      if (htmlClassName) {
+        applyClass(document.querySelector('html'), htmlClassName);
       }
-      if (props.bodyClassName) {
-        applyClass(document.querySelector('body'), props.bodyClassName);
+      if (bodyClassName) {
+        applyClass(document.querySelector('body'), bodyClassName);
       }
 
-      if (styles.pageWrap && props.pageWrapId) {
-        handleExternalWrapper(props.pageWrapId, styles.pageWrap, set);
+      if (styles.pageWrap && pageWrapId) {
+        handleExternalWrapper(pageWrapId, styles.pageWrap, set);
       }
 
-      if (styles.outerContainer && props.outerContainerId) {
-        handleExternalWrapper(props.outerContainerId, styles.outerContainer, set);
+      if (styles.outerContainer && outerContainerId) {
+        handleExternalWrapper(outerContainerId, styles.outerContainer, set);
       }
 
       var menuWrap = document.querySelector('.bm-menu-wrap');
@@ -299,7 +330,7 @@ exports['default'] = function (styles) {
       switch (e.key) {
         case ESCAPE:
           // Close on ESC, unless disabled
-          if (!props.disableCloseOnEsc) {
+          if (!disableCloseOnEsc) {
             close();
             (0, _helpersDom.focusOnMenuButton)();
           }
@@ -338,7 +369,7 @@ exports['default'] = function (styles) {
     }
 
     function handleOverlayClick() {
-      if (props.disableOverlayClick === true || typeof props.disableOverlayClick === 'function' && props.disableOverlayClick()) {
+      if (disableOverlayClick === true || typeof disableOverlayClick === 'function' && disableOverlayClick()) {
         return;
       } else {
         close();
@@ -348,28 +379,28 @@ exports['default'] = function (styles) {
     return _react2['default'].createElement(
       'div',
       null,
-      !props.noOverlay && _react2['default'].createElement('div', {
-        className: ('bm-overlay ' + props.overlayClassName).trim(),
+      !noOverlay && _react2['default'].createElement('div', {
+        className: ('bm-overlay ' + overlayClassName).trim(),
         onClick: handleOverlayClick,
         style: getStyles('overlay')
       }),
-      props.customBurgerIcon !== false && _react2['default'].createElement(
+      customBurgerIcon !== false && _react2['default'].createElement(
         'div',
         { style: getStyles('burgerIcon') },
         _react2['default'].createElement(_componentsBurgerIcon2['default'], {
           onClick: open,
-          styles: props.styles,
-          customIcon: props.customBurgerIcon,
-          className: props.burgerButtonClassName,
-          barClassName: props.burgerBarClassName,
-          onIconStateChange: props.onIconStateChange
+          styles: styles,
+          customIcon: customBurgerIcon,
+          className: burgerButtonClassName,
+          barClassName: burgerBarClassName,
+          onIconStateChange: onIconStateChange
         })
       ),
       _react2['default'].createElement(
         'div',
         {
-          id: props.id,
-          className: ('bm-menu-wrap ' + props.className).trim(),
+          id: id,
+          className: ('bm-menu-wrap ' + className).trim(),
           style: getStyles('menuWrap'),
           'aria-hidden': !isOpen
         },
@@ -377,7 +408,7 @@ exports['default'] = function (styles) {
           'div',
           {
             id: 'bm-morph-shape',
-            className: ('bm-morph-shape ' + props.morphShapeClassName).trim(),
+            className: ('bm-morph-shape ' + morphShapeClassName).trim(),
             style: getStyles('morphShape')
           },
           _react2['default'].createElement(
@@ -394,35 +425,35 @@ exports['default'] = function (styles) {
         _react2['default'].createElement(
           'div',
           {
-            className: ('bm-menu ' + props.menuClassName).trim(),
+            className: ('bm-menu ' + menuClassName).trim(),
             style: getStyles('menu')
           },
-          _react2['default'].createElement(props.itemListElement, {
-            className: ('bm-item-list ' + props.itemListClassName).trim(),
+          _react2['default'].createElement(itemListElement, {
+            className: ('bm-item-list ' + itemListClassName).trim(),
             style: getStyles('itemList')
-          }, _react2['default'].Children.map(props.children, function (item, index) {
+          }, _react2['default'].Children.map(children, function (item, index) {
             if (item) {
-              var classList = ['bm-item', props.itemClassName, item.props.className].filter(function (className) {
+              var classList = ['bm-item', itemClassName, item.className].filter(function (className) {
                 return !!className;
               }).join(' ');
               var extraProps = _extends({
                 key: index,
                 className: classList,
-                style: getStyles('item', index, item.props.style)
+                style: getStyles('item', index, item.style)
               }, !isOpen && { tabIndex: -1 });
               return _react2['default'].cloneElement(item, extraProps);
             }
           }))
         ),
-        props.customCrossIcon !== false && _react2['default'].createElement(
+        customCrossIcon !== false && _react2['default'].createElement(
           'div',
           { style: getStyles('closeButton') },
           _react2['default'].createElement(_componentsCrossIcon2['default'], {
             onClick: close,
-            styles: props.styles,
-            customIcon: props.customCrossIcon,
-            className: props.crossButtonClassName,
-            crossClassName: props.crossClassName,
+            styles: styles,
+            customIcon: customCrossIcon,
+            className: crossButtonClassName,
+            crossClassName: crossClassName,
             isOpen: isOpen
           })
         )
@@ -464,34 +495,6 @@ exports['default'] = function (styles) {
     styles: _propTypes2['default'].object,
     width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])
   };
-
-  Menu.defaultProps = {
-    bodyClassName: '',
-    burgerBarClassName: '',
-    burgerButtonClassName: '',
-    className: '',
-    crossButtonClassName: '',
-    crossClassName: '',
-    disableAutoFocus: false,
-    disableCloseOnEsc: false,
-    htmlClassName: '',
-    id: '',
-    itemClassName: '',
-    itemListClassName: '',
-    menuClassName: '',
-    morphShapeClassName: '',
-    noOverlay: false,
-    noTransition: false,
-    onStateChange: function onStateChange() {},
-    outerContainerId: '',
-    overlayClassName: '',
-    pageWrapId: '',
-    styles: {},
-    width: 300,
-    onIconHoverChange: function onIconHoverChange() {},
-    itemListElement: 'nav'
-  };
-
   return Menu;
 };
 
diff --git a/node_modules/react-burger-menu/lib/menus/bubble.js b/node_modules/react-burger-menu/lib/menus/bubble.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/elastic.js b/node_modules/react-burger-menu/lib/menus/elastic.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/fallDown.js b/node_modules/react-burger-menu/lib/menus/fallDown.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/push.js b/node_modules/react-burger-menu/lib/menus/push.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/pushRotate.js b/node_modules/react-burger-menu/lib/menus/pushRotate.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/reveal.js b/node_modules/react-burger-menu/lib/menus/reveal.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/scaleDown.js b/node_modules/react-burger-menu/lib/menus/scaleDown.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/scaleRotate.js b/node_modules/react-burger-menu/lib/menus/scaleRotate.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/slide.js b/node_modules/react-burger-menu/lib/menus/slide.js
old mode 100644
new mode 100755
diff --git a/node_modules/react-burger-menu/lib/menus/stack.js b/node_modules/react-burger-menu/lib/menus/stack.js
old mode 100644
new mode 100755
